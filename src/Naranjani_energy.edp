// ENERGY EQUATION:
func TambK = Tamb + 273.15;  //Scalar field, ambient temperature in Kelvin

Qh T, tau;
Qh Q = Ilight; //photon energy per area (coerente con VanHenten)

problem energy (T, tau)
    = int3d(Th)(rhoa*Cp*[ux, uy, uz]'*grad(T)*tau + lambda*grad(T)'*grad(tau))
    -int3d(Th)(lambdaE*tau*chi)
    +on(1,3, T=TambK)
    -int2d(Th,6)(-Q*tau);

energy;

// Temperature plot:
int[int] ordT=[1];
savevtk("Temperature.vtk", Th, T, dataname="Temperature", order=ordT);

// SPECIES MASS FRACTION EQUATION:
func h2oinit=0.85;    // from paper
func co2init=0.00153; // from paper
Qh h2o, co2, hv, c;
real Rh2o=0, Rco2=0;  //reaction term, always zero (in our model)

problem massH2O (h2o, hv)
    = int3d(Th)(rhoa*[ux, uy, uz]'*grad(h2o)*hv + rhoa * Dh2o * grad(h2o) * grad(hv))
    - int3d(Th)(Rh2o*hv + Sh2o*hv*chi)
	 +on(1,3, h2o=h2oinit);

massH2O;
//cout<<"h2o mass fraction: "<<h2o<<endl;
int[int] ordh=[1];
savevtk("massh2o.vtk", Th, h2o, dataname="Mass_h2o", order=ordh);

problem massCO2 (co2, c)
    = int3d(Th)(rhoa*[ux, uy, uz]'*grad(co2)*c + rhoa * Dco2 * grad(co2) * grad(c))
    -int3d(Th)(Rco2*c+Sco2*c*chi)
	+on(1,3, co2=co2init);

massCO2;
//cout<<"co2 mass fraction: "<<co2<<endl;
int[int] ordc=[1];
savevtk("massco2.vtk", Th, co2, dataname="Mass_co2", order=ordc);